---
import { ViewTransitions } from 'astro:transitions';
import Logo from '../components/Logo.astro';
interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Scum Dumpster Tools' />
    <meta name='viewport' content='width=device-width' />
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Special+Elite&display=swap'
      rel='stylesheet'
    />
    <link
      href='https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined'
      rel='stylesheet'
    />
    <link
      rel='stylesheet'
      href='https://cdn-uicons.flaticon.com/2.6.0/uicons-solid-straight/css/uicons-solid-straight.css'
    />
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon/favicon-16x16.png">
    <link rel="manifest" href="/assets/favicon/site.webmanifest">
    <link href='/assets/css/styles.css' rel='stylesheet' type='text/css' />
    <link href='/assets/css/styles.css' rel='stylesheet' type='text/css' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
    <style>
      .specialElite {
        font-family: 'Special Elite', system-ui;
        font-weight: 400;
        font-style: normal;
      }
      h1 {
        font-size: 4rem;
      }
      header {
        --tw-shadow: 0 25px 50px 18px rgb(0 0 0 / 0.5);
        --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
          var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
      }
      body {
        position: relative;
      }
      .backDrop {
        position: absolute;
        inset: 0;
        z-index: -1;
        overflow: hidden;
      }
      .backDrop span {
        position: absolute;
        width: var(--width);
        height: var(--height);
        top: calc(var(--top) - var(--height) / 2);
        left: calc(var(--left) - var(--width) / 2);
        background: var(--color);
        filter: blur(var(--blur));
        rotate: var(--rotate);
        border-radius: var(--border-radius);
      }
      .backDrop span:nth-of-type(1) {
        --color: #000;
        --width: 55em;
        --height: 35em;
        --rotate: 135deg;
        --blur: 14em;
        --border-radius: 50%;
        --top: 25%;
        --left: 7%;
      }
      .backDrop span:nth-of-type(2) {
        --color: var(--color-primary);
        --width: 40em;
        --height: 50em;
        --rotate: 35deg;
        --blur: 20em;
        --border-radius: 50%;
        --top: 25%;
        --left: 50%;
      }
      .backDrop span:nth-of-type(3) {
        --color: var(--color-primary);
        --width: 25em;
        --height: 35em;
        --rotate: 35deg;
        --blur: 12em;
        --border-radius: 50%;
        --top: 75%;
        --left: 90%;
      }
      .backDrop span:nth-of-type(4) {
        --color: #000;
        --width: 25em;
        --height: 72em;
        --rotate: 35deg;
        --blur: 11em;
        --border-radius: 50%;
        --top: 82%;
        --left: 95%;
      }
      .backDrop span:nth-of-type(5) {
        --color: var(--color-primary);
        --width: 25em;
        --height: 75em;
        --rotate: 70deg;
        --blur: 14em;
        --border-radius: 50%;
        --top: 75%;
        --left: 37%;
      }

      @property --lines {
        syntax: '<length>';
        inherits: false;
        initial-value: 0.0001px;
      }
    </style>
    <script
      src='https://identity.netlify.com/v1/netlify-identity-widget.js'
      is:inline></script>
  </head>

  <body>
    <header transition:persist>
      <h1 class='pageTitle text-center'>
        <span class='specialElite'>Dumpster Tools</span>
      </h1>

      <div class='navigation' id='navBarContainer'>
        <Logo />
        <div data-netlify-identity-button class='netlifyButton'>
          <i class='fi fi-ss-door-closed'></i>
        </div>
      </div>
    </header>

    <main id='main'></main>
  </body>
</html>
<script is:inline>
  document.addEventListener('astro:page-load', () => {
    const user = netlifyIdentity.currentUser();

    function checkUser() {
      //console.log('checkUser', user);
      if (user) {
        //console.log('Logged In');
        document.location.href = '/inGame';
      } else {
        //console.log('Not Logged In');
      }
    }

    if (window.netlifyIdentity) {
      window.netlifyIdentity.on('init', (user) => {
        if (!user) {
          window.netlifyIdentity.on('login', () => {
            document.location.href = '/inGame';
          });
        }
      });
    }

    netlifyIdentity.on('login', (user) => {
      //console.log('login', user);
      document.location.href = '/inGame';
    });
    netlifyIdentity.on('logout', () => {
      //console.log('Logged out');
      document.location.href = '/';
      checkUser(user);
    });

    checkUser(user);

    netlifyIdentity.on('close', () => {
      //console.log('Netlify Identity Closed');
      checkUser(user);
    });
  });
</script>

<style>
  .pageTitle {
    font-size: clamp(2em, 8vw, 3em);
    padding: 0.25em 0.25em 0.25em 1.5em;
    line-height: 0.75;
  }
  main {
    padding: 1em 1em 1em 6em;
  }
  .navigation {
    position: fixed;
    top: 0;
    background-color: var(--color-tertiary);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 1em;
    height: calc(100vh);
    min-width: 4.5em;
    z-index: 1000;
  }

  body {
    background: var(--color-secondary);
    /* background: linear-gradient(180deg, var(--color-accent) 20em, var(--color-tertiary) 20em); */
    background: radial-gradient(
        circle,
        var(--color-secondary) 30%,
        var(--color-tertiary) 90%
      ),
      no-repeat;
    color: var(--font-color);
    font-size: clamp(16px, 1vw, 18px);
  }
  body:before {
    content: '';
    background: #0000009c;
    position: absolute;
    inset: 0;
    z-index: -1;
  }
  header {
    background: var(--color-tertiary);
  }
  .wrapper {
    background: var(--color-accent);
    --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.5);
    --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
      var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
  .wrapper hr {
    border: 1px solid var(--color-tertiary);
  }
  .wrapper button {
    background: hsl(from var(--color-accent) h s 24);
    color: var(--font-color);
    min-width: max-content;
  }

  .wrapper button:hover {
    outline: 0.25em solid var(--color-primary);
  }

  .wrapper table {
    background: var(--color-accent);
  }
  tr {
    background: var(--color-tertiary);
    color: var(--font-color);
    border-bottom: 0.25em solid var(--color-tertiary);
  }
  td {
    background: var(--color-accent);
    color: var(--font-color);
  }
  th {
    background: var(--color-accent);
    color: var(--font-color);
  }
  th:has(> .clickable) {
    background: var(--color-accent);
    color: var(--font-color);
  }

  tbody tr {
    border-bottom: 0.25em solid var(--color-tertiary);
  }
  input[type='file']::after {
    color: var(--font-color);
  }

  /* file upload button */
  input[type='file']::file-selector-button {
    color: transparent;
    background-color: transparent;
    border: 3px solid var(--color-accent);
    box-shadow: 0px 1px 0px rgba(0, 0, 0, 0.05);
  }
  /* file upload button hover state */
  input[type='file']::file-selector-button:hover {
    /* background-color: var(--color-primary);
  color:  var(--color-primary) */
  }

  /* file upload button active state */
  input[type='file']::file-selector-button:active {
    background-color: transparent;
    color: transparent;
  }
  .wrapper select,
  .wrapper input,
  .wrapper textarea {
    background: var(--color-tertiary);
    color: var(--font-color);
  }

  .clickable:hover {
    background: var(--color-primary);
    color: var(--font-color);
  }
  main {
    min-height: 100vh;
  }
  .wrapper {
    margin: 0 auto;
    justify-content: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 90vw;
    padding: 1em 1.5em;
    border-radius: 1em;
  }
  .wrapper button {
    border: none;
    padding: 0.88em 1.25em;
    border-radius: 0.5em;
    cursor: pointer;
    min-width: max-content;
    height: 3em;
    align-self: flex-end;
    margin-bottom: 0.8em;
  }

  .wrapper button:hover {
    background: transparent;
    outline-offset: -0.25em;
  }

  .wrapper table {
    /* border-collapse: collapse;
    border-radius: 0.5em;
    text-align: left; */
  }
  thead {
    /* margin-top: 0.5em;
    cursor: pointer;
    padding: 0.75em 1.25em; */
  }
  thead th {
    /* background: var(--color-primary);
    padding: 0; */
  }
  tr {
    /* padding: 0.75em 1.25em;
    justify-content: space-between; */
  }
  td {
    padding: 0.75em 1.25em;
    text-wrap: nowrap;
  }
  th {
    /* padding: 1em 1.25em; */
  }
  th:has(> .clickable) {
    /* padding: 0; */
  }

  .hidden {
    display: none;
  }

  .wrapper input[type='file'] {
    padding: 0.4em 0.5em;
  }

  input[type='file']::after {
    position: absolute;
    pointer-events: none;
    top: 1.2em;
    left: 1.75em;
    content: 'Upload File';
    font-weight: bold;
  }
  input[type='file']:hover::after {
    /* color: var(--color-accent); */
    /* background-color:  var(--color-primary)  */
  }

  /* file upload button */
  input[type='file']::file-selector-button {
    border-radius: 4px;
    padding: 0 16px;
    height: 3em;
    cursor: pointer;
    margin-right: 16px;
    transition: background-color 200ms;
  }

  label {
    text-wrap: nowrap;
    cursor: pointer;
  }
  .wrapper select,
  .wrapper input,
  .wrapper textarea {
    /* border: none; */
    border: 1px solid hsl(0deg 0% 75% / 15%);
    padding: 1em 1.25em;
    border-radius: 0.5em;
    width: 100%;
  }
  .wrapper input {
    padding: 0.88em 1em;
  }

  .clickable {
    cursor: pointer;
    padding: 1em 1.25em;
  }

  .glassmorphism {
    backdrop-filter: blur(0.25em);
    background: var(--color-accent); /* (207deg 100% 30% / 60%) !important; */
    /* text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.75), -2px -2px 10px rgba(0, 0, 0, 0.75); */
    /* box-shadow: -1px 1px 13px 3px #00000042; */
    border-top: 3px solid var(--color-tertiary); /*  hsla(130, 60%, 60%, 20%);  */
    border-left: 3px solid var(--color-tertiary); /*hsla(130, 60%, 30%, 40%); /* #d60000 */
    border-right: 3px solid var(--color-tertiary); /*hsla(130, 60%, 20%, 40%); /* #760404 */
    border-bottom: 3px solid var(--color-tertiary); /*hsla(130, 60%, 10%, 50%); /* #370909 */
  }

  .glassmorphism:before {
    content: ' ';
    border-radius: 8px;
    display: block;
    position: absolute;
    inset: 0.25em;
    z-index: -1;
    filter: blur(15px);
    background: linear-gradient(
      -15deg,
      hsla(0, 0%, 45%, 0.1) 0%,
      hsla(0, 0%, 45%, 0.05) 35%,
      hsla(0, 0%, 26%, 0.05) 65%,
      hsla(0, 0%, 53%, 0.1) 100%
    );
  }
</style>
