<div class='wrapper'>
  <h2 class='my-8 text-2xl text-center'>GetPlayers API</h2>
  <table class='table-auto'>
    <thead>
      <tr>
        <th>ID</th>
        <th>PlayerName</th>
        <th>CharacterName</th>
        <th>SteamID</th>
        <th>DiscordID</th>
        <th>IP</th>
        <th>InTime</th>
        <th>OutTime</th>
      </tr>
    </thead>
    <tbody id='GetPlayersTable'> </tbody>
  </table>
</div>
<script>
  async function fetchData(url) {
    try {
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          Accept: '*/*',
          Authorization: 'WhalleyBotAPI_F935H3ucUJRv7g==', //'WhalleyBotAPI_rtTECwgxKLKy9Q==',
        },
      });
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
      return data;
    } catch (error) {
      console.error('Error fetching or parsing data: ', error);
      throw error;
    }
  }

  async function displayJsonAsTable() {
    try {
      let allPlayers = []; // Array to store all players from all pages
      let pageNumber = 1; // Start with the first page
      let nextPageExists = true;

      while (nextPageExists) {
        // Fetch data for the current page
        const data = await fetchData(
          `https://api.whalleybot.com/bot/217fc652/GetPlayers/${pageNumber}`, //afd0a027
        );

        if (data && data.PlayerData && data.PlayerData.length > 0) {
          // Add players from the current page to the array
          allPlayers = allPlayers.concat(data.PlayerData);
          pageNumber++; // Move to the next page
        } else {
          nextPageExists = false; // No more data available, exit the loop
        }
      }

      // Clear existing table rows
      const tableBody = document.getElementById('GetPlayersTable');
      tableBody.innerHTML = '';

      // Populate table with JSON data
      allPlayers.forEach((player) => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${player.ID}</td>
            <td>${player.PlayerName}</td>
            <td>${player.CharacterName}</td>
            <td>${player.SteamID}</td>
            <td>${player.DiscordID}</td>
            <td>${player.IP}</td>
            <td>${player.InTime}</td>
            <td>${player.OutTime}</td>
          `;
        tableBody.appendChild(row);
      });
    } catch (error) {
      console.error('Error fetching or parsing data: ', error);
    }
  }

  // Call the function to display JSON data as a table
  displayJsonAsTable();
</script>
