---
import Layout from '../layouts/Layout.astro';
import BunkerButtons from '../components/BunkerButtons.astro';
---

<style is:inline>
  .wrapper {
    margin: 1em 1.5em;
    justify-content: center;
    display: flex;
    flex-direction: column;
  }
  .wrapper textarea {
    background: #313338;
    color: #d1d1d1;
    border: none;
    padding: 1em 1.25em;
    border-radius: 0.5em;
    height: 18em;
    width: 95vw;
    text-wrap: nowrap;
  }
  .wrapper .flex button {
    margin-top: 1em;
    background: #2b2d30;
    color: #d1d1d1;
    border: none;
    padding: 1em 1.25em;
    border-radius: 0.5em;
    cursor: pointer;
  }

  .wrapper button.nonab {
    border: 3px solid #448544;
  }

  .wrapper table {
    border-collapse: collapse;
    width: 100%;
    margin-top: 20px;
    border-radius: 0.5em;
    text-align: left;
    display: grid;
  }
  thead {
    margin-top: 0.5em;
  }
  tr {
    background: #313338;
    color: #d1d1d1;
    border-bottom: 0.25em solid #1e1f22;
  }
  td {
    /* background: #313338;
    color: #d1d1d1; */
    padding: 0.75em 1.25em;
    text-wrap: nowrap;
  }

  th {
    background: #2b2d31;
    color: #d1d1d1;
    padding: 1em 1.25em;
  }
  th:has(> .clickable) {
    background: #2b2d31;
    color: #d1d1d1;
    padding: 0;
  }

  #bpcCounts {
    margin-top: 20px;
  }

  /* Add this style for highlighting on click */
  tr.highlight {
    background: #2b2d31;
    color: #d1d1d1;
  }

  .clickable {
    cursor: pointer;
    padding: 1em 1.25em;
  }
  .clickable:hover {
    background: #1e1f22;
    color: #d1d1d1;
  }
</style>

<Layout title='Bunker List '>
  <h2 class='my-8 text-2xl text-center'>Bunker List</h2>
  <div class='wrapper'>
    <form>
      <textarea
        id='inputString'
        rows='4'
        cols='50'
        placeholder='Paste Bunker List'></textarea>
      <br />
      <button
        type='button'
        onclick='convertToTable()'
        class='shadow bg-green-800 hover:bg-green-900 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded'
        >Convert</button
      >
    </form>
    <BunkerButtons />
  </div>

  <script is='inline'>
    function teleportTo(element) {
      var teleportToText = element.getAttribute('title');
      teleportToText = '#Teleport ' + teleportToText; // Prepend "#TeleportToVehicle "

      // Create a temporary textarea to copy the modified text to the clipboard
      var tempText = document.createElement('textarea');
      tempText.value = teleportToText;
      document.body.appendChild(tempText);
      tempText.select();
      document.execCommand('copy');
      document.body.removeChild(tempText);
    }

    function convertToTable() {
      var inputString = document.getElementById('inputString').value; // Get the input string from the textarea
      var lines = inputString.split('\n'); // Split the input string into lines

      // Define arrays to store active and locked bunker IDs
      var activeBunkers = [];
      var lockedBunkers = [];

      // Iterate through each line to parse bunker status
      lines.forEach(function (line) {
        // Check if the line indicates a bunker activation or locking
        if (line.includes('is Active')) {
          // Extract the bunker ID from the line
          var bunkerID = line.split(' ')[0];
          activeBunkers.push(bunkerID);
        } else if (line.includes('is Locked')) {
          // Extract the bunker ID from the line
          var bunkerID = line.split(' ')[0];
          lockedBunkers.push(bunkerID);
        }
      });

      console.log(activeBunkers);
      // Iterate through each button and style it based on active or locked status
      var buttons = document.querySelectorAll('button');
      buttons.forEach(function (button) {
        var buttonID = button.id;
        console.log(buttonID);
        if (activeBunkers.includes(buttonID)) {
          // If the button ID is active, apply active styles
          button.classList.add('active');
        } else {
          // If neither active nor locked, remove both styles
          button.classList.add('locked');
        }
      });
    }
  </script>
</Layout>
